<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>QGIS DEM数据快速获取</title>
    <link href="/2024/05/22/02%20%E7%94%9F%E6%80%81%E7%8E%AF%E5%A2%83/QGIS%20DEM%E6%95%B0%E6%8D%AE%E5%BF%AB%E9%80%9F%E8%8E%B7%E5%8F%96/"/>
    <url>/2024/05/22/02%20%E7%94%9F%E6%80%81%E7%8E%AF%E5%A2%83/QGIS%20DEM%E6%95%B0%E6%8D%AE%E5%BF%AB%E9%80%9F%E8%8E%B7%E5%8F%96/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Dem 是非常重要的数据，30 m 的精度也是最容易获取的，目前有很多种方式可以获取，比如地理空间数据云，今天介绍用 QGIS插件获取。<br>这种方式的最大优势是方便快捷，当我们有评价区域范围图层时，更加方便。</p><h2 id="插件下载与安装"><a href="#插件下载与安装" class="headerlink" title="插件下载与安装"></a>插件下载与安装</h2><p>插件-管理并安装插件-搜索下载<br>OpenTopography DEM Downloader<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221855383.png" alt="image.png"></p><p>注册账号并获取 key<br>操作非常简单，没有限制，国内能访问，但有点慢。<br><a href="https://portal.opentopography.org/myopentopo">myOpenTopo Workbench (opentopography.org)</a></p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221845374.png" alt="image.png"></p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221844472.png" alt="image.png"></p><h2 id="下载-dem"><a href="#下载-dem" class="headerlink" title="下载 dem"></a>下载 dem</h2><p>选着你要下载的区域，点击插件图标<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221846162.png" alt="image.png"><br>选择 dem 类型，推荐 30 m，选择下载范围，然后输入 key，就可以了。<br>选择下载方式可以通过图层、显示范围及手动画范围等三种方式。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221848829.png" alt="image.png"></p><p>成功，注意网站下载的默认是 wgs 84 坐标系，其他坐标系需要自己转换。<br>下载后导入 ArcGIS 使用时，需要定义坐标系。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221850911.png" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>生态环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>水文分析</tag>
      
      <tag>arcgis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>详解ArcGIS 水文分析模型构建</title>
    <link href="/2024/05/22/02%20%E7%94%9F%E6%80%81%E7%8E%AF%E5%A2%83/ArcGIS%20%E6%B0%B4%E6%96%87%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA/"/>
    <url>/2024/05/22/02%20%E7%94%9F%E6%80%81%E7%8E%AF%E5%A2%83/ArcGIS%20%E6%B0%B4%E6%96%87%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B%E6%9E%84%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在地理信息系统（GIS）领域，水文分析是一项至关重要的任务，它涉及到对地表水流动路径、河流网络、流域划分等关键水文特征分析。这些分析对于水资源管理、洪水预警、环境规划以及城市排水系统设计等众多领域都具有重要的应用价值。</p><p>本文旨在探讨ArcGIS中水文分析的全过程，并展示如何构建一个可复用的水文分析模型。通过本文的学习和实践，读者将能够深入了解ArcGIS在水文分析方面的应用，掌握从数据预处理到模型构建、从模型运行到结果输出的整个流程。此外，本文还将介绍如何将ArcGIS模型脚本化，以提高模型的复用性和自动化程度。</p><p>在接下来的章节中，我们将详细介绍水文分析的各个步骤，包括资料背景的准备、操作中可能出现的问题及注意事项、分析框架的梳理、水文模型的搭建、模型思维和图形化界面的构建等。通过这些内容的学习，读者将能够全面掌握 ArcGIS 水文分析的相关知识和技能。</p><h2 id="项目环境、条件"><a href="#项目环境、条件" class="headerlink" title="项目环境、条件"></a>项目环境、条件</h2><p>ArcGIS 10.8 中文包<br>已开启 Spatial Analyst Tools 分析工具<br>Win 10<br>数据集<br>    30 m dem 栅格数据集<br>Tips：可在微信公众号：环境猫 er ，回复 dem ，获取本文实验 dem 。<br>理论上 ArcGIS 10.2 也几乎一样，部分工具可能由翻译问题，建议初学者完全按照本文的文档结构进行。</p><h2 id="Dem-数据预览"><a href="#Dem-数据预览" class="headerlink" title="Dem 数据预览"></a>Dem 数据预览</h2><p> <strong>DEM</strong>（Digital Elevation Model，数字高程模型）是一种用于表示地表地形起伏的数字模型。它通过规则格网的矩阵形式，记录每个格网单元的高程值，从而在计算机中构建出地形的三维模型。DEM 是地理信息系统（GIS）中重要的空间数据类型之一，广泛应用于地形分析、水文模拟、城市规划、地质灾害评估等多个领域。<br> Dem 可以通过地理空间数据云、QGIS 插件、CAD 地形文件生产等多种方式获取。此前有介绍，本文不多赘述。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221924998.png" alt="image.png"></p><h2 id="ArcGIS模型构建器"><a href="#ArcGIS模型构建器" class="headerlink" title="ArcGIS模型构建器"></a>ArcGIS模型构建器</h2><p><strong>ArcGIS模型构建器</strong>是Esri公司开发的ArcGIS软件中的一个强大工具，它允许用户通过图形化界面来创建、编辑和运行一系列自动化的GIS分析模型。模型构建器的核心优势在于能够将复杂的GIS分析流程简化为一系列可视化的步骤，使得用户无需编写代码即可完成复杂的空间分析任务。<br>可以在空白文件夹下，点击按钮打开，也可以在文件夹内，右键打开。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405231055335.png" alt="image.png"><br>建议像笔者一样，建立好文件夹框架，依次新建文件数据库-工具集-模型。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405231057487.png" alt="image.png"><br>在模型构建器中，数据类型如下，本文将用到项目数据、工具、派生数据和值等类型。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405231059219.png" alt="image.png"><br>将数据、工具等可以直接拖入模型界面中，非常方便。</p><h2 id="模型搭建"><a href="#模型搭建" class="headerlink" title="模型搭建"></a>模型搭建</h2><h3 id="填洼"><a href="#填洼" class="headerlink" title="填洼"></a>填洼</h3><p>dem-填洼-fill<br><strong>填洼</strong>（Fill）是去除 dem 中的洼地（sinks）或凹陷（depressions）。这些洼地在地形分析中可能会导致错误的水流方向和流域划分，需要通过填洼操作来纠正。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221609608.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221926917.png" alt="image.png"></p><h3 id="流向"><a href="#流向" class="headerlink" title="流向"></a>流向</h3><p>fill-流向-FlowDirection<br>注意选着 fill 时需要选择蓝色循环的那个，为变量值。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221614049.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221618226.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221930624.png" alt="image.png"></p><h3 id="流量"><a href="#流量" class="headerlink" title="流量"></a>流量</h3><p>FlowDirection-流量-fillacc<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221620132.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221620254.png" alt="image.png"><br>根据栅格数值大小隐约能看出河流的线条。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221934241.png" alt="image.png"><br>点击栅格可以查询该处的数值，通过这种方法判断最小径流的值，后面有用。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221937003.png" alt="image.png"></p><h3 id="河流长度"><a href="#河流长度" class="headerlink" title="河流长度"></a>河流长度</h3><p>FlowDirection-河流长度-flowlength 测量方向选择 upstream，<br>水流长度工具的主要用途是计算给定盆地内最长水流的长度。该度量值常用于计算盆地的聚集时间。这可使用 UPSTREAM 选项来完成。该工具也可通过将权重栅格用作下坡运动的阻抗，来创建假设降雨和径流事件的距离-面积图。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221949623.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230838124.png" alt="image.png"></p><h3 id="栅格计算器"><a href="#栅格计算器" class="headerlink" title="栅格计算器"></a>栅格计算器</h3><p>栅格计算器 或者条件函数<br>栅格计算器（Raster Calculator）  条件函数 Con(FlowAccu&gt;R,1)<br>目的是将流量栅格数据中提取河流的部分，公式为”flowacc” &gt;&#x3D; 1000。<br>在模型构建器中使用左右%代表变量。新增一个变量，作为流量限值 R，建议通过流量栅格 (flowacc), 点击查询河流的最小栅格，我这里根据实际情况，选择输入 1000。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230842687.png" alt="image.png"></p><p>具体公式以自己实验为准，添加变量后，修改为”%fillacc%” &gt;&#x3D;  “%任意值%”<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221641559.png" alt="image.png"><br>记得点击任意值，添加 1000，这样以后只需要修改这个值，就可以调整河流长度了。<br>Acc 1000 结果，可见满足条件的，也就是河流为 1，不满足的为 0.<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230854890.png" alt="image.png"></p><h3 id="河流链接"><a href="#河流链接" class="headerlink" title="河流链接"></a>河流链接</h3><p>acc1000+FlowDirection&#x3D;Streamlink<br>by 河流链接<br>河流链接的作用有：<strong>构建连续的河流网络</strong>：河流链接工具能够识别并连接相邻的河流段，确保河流网络在空间上是连贯和正确的。<strong>分配唯一标识符</strong>：给河流网络中的每个部分分配唯一的 ID，便于管理和进一步分析。这有助于区分不同的河流分支和主流，以及分析它们各自的属性（如流量、长度等）。<strong>优化数据结构</strong>，减少在模型中处理大量独立线段时的复杂性。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221642956.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230924178.png" alt="image.png"></p><h3 id="河网分级"><a href="#河网分级" class="headerlink" title="河网分级"></a>河网分级</h3><p>acc1000+FlowDirection&#x3D;StreamOrder<br>by 河网分级<br>河网结构用于识别河流上下级，常见的河网分级方法有斯特拉勒（Strahler）、希科特（Horton）和谢内（Shreve）等。斯特拉勒法是最常用的，它基于河流交汇规则来分配等级，即每次支流汇入时，如果两支流的等级相同，则合并后的河段等级加1；如果不同，则高等级保持不变。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221635748.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230928380.png" alt="image.png"></p><h3 id="栅格河网矢量化"><a href="#栅格河网矢量化" class="headerlink" title="栅格河网矢量化"></a>栅格河网矢量化</h3><p>StreamOrder+FlowDirection&#x3D;StreamOrder1000<br>by 栅格河网矢量化<br>顾名思义，栅格河网矢量化就是将河流网络的栅格数据转换成矢量数据格式，便于分析、可视化及水文建模应用。注意如果要增加河流长度等字段，需要在投影坐标系下进行。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221824966.png" alt="image.png"></p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230932035.png" alt="image.png"></p><h3 id="绘制倾泻点"><a href="#绘制倾泻点" class="headerlink" title="绘制倾泻点"></a>绘制倾泻点</h3><p>StreamOrder 1000+end&#x3D;FeatureVert_1000<br>By要素折点转点<br><strong>倾泻点</strong>是指汇流区域中具有最低高程的边界象元。它标志着水从一个流域流向另一个流域的出口点，或者是水流离开一个封闭流域（如盆地）的地点。<br>可以通过要素折点转点生成，也可以根据自己手工增加，形式是一些离散的点。<br>要素折点转点，顾名思义，指通过矢量线的折点或转点然后生成点，有 all、mindle、end、start、both_ends、dangle（悬挂点，指离散点） 等类型，绘制倾泻选择 end 。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221825292.png" alt="image.png"><br>倾泻点非常关键，是汇水区分析的重要参数，除了自动生成的点外，可以根据实际需要，添加、删除点。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230948266.png" alt="河流与倾泻点"></p><h3 id="栅格流域提取"><a href="#栅格流域提取" class="headerlink" title="栅格流域提取"></a>栅格流域提取</h3><h6 id="集水区"><a href="#集水区" class="headerlink" title="集水区"></a>集水区</h6><p>集水区也就是分水岭，根据流向和倾泻点一起做的汇水范围。有倾泻点的会比盆域分析更细，他与倾泻点的点位有很大关系。<br>FlowDirection+FeatureVert_1000&#x3D;倾泻点字段为空&#x3D;watersh</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221645662.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230956061.png" alt="image.png"></p><h4 id="盆域分析"><a href="#盆域分析" class="headerlink" title="盆域分析"></a>盆域分析</h4><p>流向 FlowDirection 盆域分析&#x3D; basin<br>盆域分析，也就是流域分析，可以理解为没有倾泻点的大范围流域分析。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221647107.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230957148.png" alt="image.png"></p><p>运行模型-成功<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221731875.png" alt="image.png"></p><h3 id="栅格转面"><a href="#栅格转面" class="headerlink" title="栅格转面"></a>栅格转面</h3><p>上述流域栅格，转为矢量图层。用于可视化和计算，作用与栅格河网矢量化类似。<br> basin&#x2F;watersh 栅格转面 RasterT_basin &#x2F;RasterT_watersh</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221727096.png" alt="image.png"><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405230955132.png" alt="子流域范围.png"></p><p>至此，水文分析基本结束。<br>调试模型，运行成功。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405221742623.png" alt="image.png"></p><p>调整模型架构，让连接线不交叉。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405231005860.png" alt="image.png"></p><h2 id="模型应用"><a href="#模型应用" class="headerlink" title="模型应用"></a>模型应用</h2><h3 id="导出-py-文件"><a href="#导出-py-文件" class="headerlink" title="导出 py 文件"></a>导出 py 文件</h3><p>可以导出 py 文件，进行模型复用。在 ArcGIS 环境中导入脚本，注意导入前修改绝对地址注意保持一致。另外它基于 ArcPy 模块，一个专为 ArcGIS 设计的空间分析和数据处理库。因此，它的运行环境依赖于 ArcGIS，使用 ArcGIS Python 2.X 环境编写的。不能用于 python 3 中。<br>经过测试，代码并不能直接使用，需要重新编译后才能使用，后续会出一期 python 水文分析的文章。</p><h3 id="完善脚本"><a href="#完善脚本" class="headerlink" title="完善脚本"></a>完善脚本</h3><ol><li>将 dem 输入变为变量，方法为新增变量-栅格数据集，然后选择对应的 dem 位置。</li><li>重命名，将 dem 命名为输入 dem。双精度命名为输入流量下限值。</li><li>完善模型参数，模型-模型属性-参数将输入 dem、输入流量下限值作为必填项</li></ol><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405231021444.png" alt="image.png"></p><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p>点击模型打开，输入 dem 和下限值，点击运行。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405231038360.png" alt="1716431898456.png"></p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405231039764.png" alt="image.png"><br>运行成功，结果输出在模型内指定的文件夹。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405231040644.png" alt="image.png"><br>重新运行将会替换结果文件，运行一次后，结果移动出来，再次使用。总之，非常方便。</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>本文通过详细探讨ArcGIS水文分析的全过程，不仅展示了如何利用ArcGIS模型构建器来创建一个高效、可复用的水文分析模型，还深入介绍了模型构建器的图形化界面和强大功能。通过本文的学习，读者可以清晰地看到，即使是GIS编程新手，也能通过模型构建器实现复杂的空间分析任务，而无需深入代码层面。</p>]]></content>
    
    
    <categories>
      
      <category>生态环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>水文分析</tag>
      
      <tag>arcgis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>宝藏网站推荐-封面图片生成器</title>
    <link href="/2024/05/21/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/%E5%AE%9D%E8%97%8F%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90-%E5%B0%81%E9%9D%A2%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <url>/2024/05/21/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/%E5%AE%9D%E8%97%8F%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90-%E5%B0%81%E9%9D%A2%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>封面图片生成器：<a href="https://spacexcode.com/coverview">封面图生成器 | 太空编程 (spacexcode.com)</a><br>最近爱上了写文案，在网上冲浪的时候发现一个宝藏网站。Spacecode，一个大神维护的个人网站，含有前端知识库、个人博客及他做的开源项目。<br>其中封面图片生成器简单好用，完全免费，自来水一下。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211851977.png" alt="image.png"><br>其他作品，如毛玻璃效果生成器、代码图片生成器、文字卡片等等，都非常棒。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211852301.png" alt="image.png"><br>作者项目做的很好，从他的简介也可以看出，是个很棒的家伙，向他学习。Build in public，learn in public。</p>]]></content>
    
    
    <categories>
      
      <category>工具推荐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具推荐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从 CAD 到 ArcGIS：高精度DEM 数字高程文件生成</title>
    <link href="/2024/05/21/02%20%E7%94%9F%E6%80%81%E7%8E%AF%E5%A2%83/ArcGIS%E5%AF%BC%E5%85%A5autoCAD%E5%9C%B0%E5%BD%A2%E6%95%B0%E6%8D%AE%E5%B9%B6%E6%95%B4%E7%90%86/"/>
    <url>/2024/05/21/02%20%E7%94%9F%E6%80%81%E7%8E%AF%E5%A2%83/ArcGIS%E5%AF%BC%E5%85%A5autoCAD%E5%9C%B0%E5%BD%A2%E6%95%B0%E6%8D%AE%E5%B9%B6%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在日常工作中，我们常需要对特定区域地形进行深入分析。易于获得的地形数据为 30 m 精度，有时无法满足项目要求，需要更高精度的地形资料，而这些资料通常以 AutoCAD 文件的形式存在。<br>这些数据需经过 GIS 系统处理，以生成所需的 dem 数据。本篇文章将循序渐进，从 CAD 地形图层常用名称开始，详尽阐述在 ArcGIS 平台上，如何处理 AutoCAD 地形文件，最终产出高精度的 DEM（数字高程模型），希望对你有所帮助。</p><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><h3 id="DEM"><a href="#DEM" class="headerlink" title="DEM"></a>DEM</h3><p><strong>DEM（Digital Elevation Model）</strong>：即数字高程模型，是通过有限的地形高程数据实现对地面地形的数字化模拟。是数字地形模型（Digital Terrain Model，简称 DTM）的一个分支。狭义的 dem 是栅格数据，在水文分析中，dem 数据可以用来生成坡向、坡度、水系、分水岭、泄水点等信息。</p><h3 id="TIN"><a href="#TIN" class="headerlink" title="TIN"></a>TIN</h3><p><strong>TIN（Triangular Irregular Network）</strong>：即不规则三角网，是基于矢量的数字地理数据的一种形式，通过将一系列折点组成的三角形来构建。各折点通过由一系列边进行连接，最终形成一个三角网。TIN 是一种更为精细的表示方法，适用于复杂地形的精确表示和分析。</p><h3 id="CAD-图层常用名称"><a href="#CAD-图层常用名称" class="headerlink" title="CAD 图层常用名称"></a>CAD 图层常用名称</h3><p>以下是常用的 CAD 地形图常用图层名称。</p><ol><li>DGX–等高线</li><li>DLSS–道路设施</li><li>DLDW–独立地物</li><li>DMTZ–地貌特征</li><li>GCD–高程点</li><li>JMD–居民地</li><li>SXSS–水系设施</li><li>ZBTZ–植被特征</li><li>GXYZ–管线设施</li><li>TK–图框</li></ol><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><p>新建 ArcGIS 项目，不要在已有坐标系的文件中添加。<br>在导入前，设置好坐标系，这需要问资料来源方。<br>右键-属性-常规-编辑，选择合适的坐标系。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211514712.png" alt="image.png"><br>将 CAD 文件拖入 ArcGIS。</p><h3 id="确定要保留的图层"><a href="#确定要保留的图层" class="headerlink" title="确定要保留的图层"></a>确定要保留的图层</h3><p>导入 CAD 文件后，会发现有很多文件，<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211516876.png" alt="image.png"><br>分别为：</p><ul><li>Annotation 注释</li><li>Point 点</li><li>Polyline 多段线</li><li>Polygon 多边形</li><li>MultiPatch 3 D 几何图形<br>一般需要关注的是 Polyline 、Point、Polygon 根据自己的需要整理对应的数据。地形数据在 Polyline 中，通过查询工具，点击对应的图层可以查询其图层名称。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211526491.png" alt="image.png"><br>比如，地形图层为 DGX。<br>右键 Polyline-属性-绘制图层-选择 DGX。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211528230.png" alt="image.png"><br>右键 Polyline-打开属性表-点击表选项-按属性选择, 输入表达式<br>“Elevation” &gt;0，可根据自己的文件属性，定义筛选表达式。</li></ul><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211531228.png" alt="image.png"><br>导出数据，右键 Polyline-数据-导出数据，导出所选要素。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211534372.png" alt="image.png"><br>可以用同样的方法将需要的图层导出 GIS 图层数据。<br>如地貌特征（DMTZ） 、水系设施（SXSS）、居民地（JMD）、道路设施（DLSS）等, 选择不同的图层时，记得提前在显示区域右键-清楚所选区域。<br>在本文示例文件中，因为是农业区域地貌特征和等高线都有高程信息，为提高精度，将两者合并导出图层精细分析。</p><h3 id="创建-TIN"><a href="#创建-TIN" class="headerlink" title="创建 TIN"></a>创建 TIN</h3><p>工具搜索-创建 TIN，高度字段输入 Elevation，注意在创建之前，最好打开属性表，观察 Elevation 值的范围，从 CAD 导入的数据可能存在异常。因此需要用前面表达式筛选的方式，选择合适的等高线范围。例如本示例需要将 Elevation 控制在 0-500 之间，500 以上的异常值去掉。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211629026.png" alt="image.png"><br>点击属性-符号系统选择分区及配色。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211647927.png" alt="image.png"></p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211707784.png" alt="image.png"></p><h3 id="TIN-转-dem"><a href="#TIN-转-dem" class="headerlink" title="TIN 转 dem"></a>TIN 转 dem</h3><p>使用 TIN 转栅格工具，转出的数据就是我们需要的 dem 数据。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211711236.png" alt="image.png"><br>得到区域 dem 数据如下，完成。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211711285.png" alt="image.png"></p><p>用查询工具点击 dem 可得到精度信息。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405211717057.png" alt="image.png"></p><p>有了 dem 数据，我们就能做很多工作了，如水文分析的河流水系、坡度、坡向、产流量、河流链接、分水岭、流域等等。后续也会整理 dem 水文分析的操作步骤。</p><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>本方法实际精度与 DWG 文件质量关系很大，例如示例文件中，由于地貌特征图层文件，大部分高指为 0，无法参与 dem 结果生成，降低了最终生成文件的效果。若深入探究，还可以用克里金插值等方法，提高精度。<br>总之，以上就是用 CAD 文件生产 DEM 的过程，如果有帮助到你，请点赞关注。</p>]]></content>
    
    
    <categories>
      
      <category>生态环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>水文分析</tag>
      
      <tag>arcgis</tag>
      
      <tag>地形数据</tag>
      
      <tag>经验分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免费图片素材网站推荐</title>
    <link href="/2024/05/19/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/%E5%85%8D%E8%B4%B9%E5%9B%BE%E7%89%87%E7%B4%A0%E6%9D%90%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/"/>
    <url>/2024/05/19/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/%E5%85%8D%E8%B4%B9%E5%9B%BE%E7%89%87%E7%B4%A0%E6%9D%90%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="免费图片素材网站推荐"><a href="#免费图片素材网站推荐" class="headerlink" title="免费图片素材网站推荐"></a>免费图片素材网站推荐</h2><p>最近在找一些免费的图片素材，收集整理如下：</p><ul><li><a href="https://wallpaperhub.app/">https://wallpaperhub.app/</a></li><li><a href="https://unsplash.com/">https://unsplash.com/</a></li><li><a href="https://www.pexels.com/">https://www.pexels.com/</a></li><li><a href="https://pixabay.com/zh/">https://pixabay.com/zh/</a></li></ul><p><strong>注意：如果要自己用最好是选择明确标注免费的图片。</strong></p><h3 id="wallpaperhub"><a href="#wallpaperhub" class="headerlink" title="wallpaperhub"></a>wallpaperhub</h3><p>支持不同尺寸下载</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405192108439.png" alt="网站截图"></p><h3 id="Unsplash"><a href="#Unsplash" class="headerlink" title="Unsplash"></a>Unsplash</h3><p>下载速度快，包括照片、矢量图、图集等。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405192116523.png" alt="网站截图"></p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405192113133.jpg" alt="andrew-small-EfhCUc_fjrU-unsplash.jpg"></p><h2 id="Pexels"><a href="#Pexels" class="headerlink" title="Pexels"></a>Pexels</h2><p>中规中矩，下载速度较慢。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405192119347.png" alt="image.png"></p><h3 id="Pixabay"><a href="#Pixabay" class="headerlink" title="Pixabay"></a>Pixabay</h3><p>加载较慢，支持不同尺寸下载，但是直接点下载并没有反应…<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405192124520.png" alt="image.png"></p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405192129471.webp" alt="多彩窗户.webp"></p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>最后，如果这篇文章有帮助到你，记得收藏。<br>也欢迎关注我的个人微信公众号：<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405192215003.jpg" alt="qrcode_for_me.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>工具推荐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验分享</tag>
      
      <tag>工具推荐</tag>
      
      <tag>素材</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ChatGLM 智能体 搭建属于自己的AI知识库</title>
    <link href="/2024/05/19/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/ChatGLM%20%E6%99%BA%E8%83%BD%E4%BD%93%20%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84AI%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
    <url>/2024/05/19/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/ChatGLM%20%E6%99%BA%E8%83%BD%E4%BD%93%20%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84AI%E7%9F%A5%E8%AF%86%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在看一本书《在线》，将所有数据都需要在线，才有生命力，那么我们的知识库也是。我们现在就可以用先进的大预言模型搭建属于自己的在线 AI 知识库，他就是 ChatGLM 智谱清言智能体。<br>它可以将自己的知识库与 ChatGLM 结合，成为某一方面的专业知识问答系统。当然，市面上有很多类似解决方案，但是智谱清言是我试过国内最好用的一个产品，整体知识库最多免费支持1000个文件（每个100MB），知识库总字数不超过1亿字。完全够用了，而且具备联网功能。</p><p>本文以搭建水文分析智能体为例，讲解如何快速搭建智能体。</p><h2 id="创建智能体"><a href="#创建智能体" class="headerlink" title="创建智能体"></a>创建智能体</h2><p>进入智谱清言，点击创建智能体。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405122102223.png" alt="image.png"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>名称：简介、开场白随便填。<br>配置信息按照需求填，我的水质分析内容如下：<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405122104516.png" alt="image.png"><br>推荐问题随便填。<br>模型调用建议全点上。<br>知识库文件最关键，建议将你本地知识库全部上传，比如平常写的分析报告，标准导则等等，互联网已经有的文件不用传，文件类型也可以是 url。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405122110778.png" alt="微信截图_20240512210752.png"><br>知识库设置可以选择显示段落来源，或者仅从知识库回答。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405122111537.png" alt="image.png"><br>添加 API 可以选择一些开源的 API，或者自己创建 API，这里添加了天气查询的 API。那么就能实现查询城市天气的功能。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405122112037.png" alt="image.png"></p><p>最后点击发布即可，发布方式可以用邀请的方式，可以定向分享，这样你不想公开的智能体，其他人就无法访问。</p><h2 id="测试智能体"><a href="#测试智能体" class="headerlink" title="测试智能体"></a>测试智能体</h2><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405122115270.png" alt="image.png"></p><h2 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h2><p>现在的 AI 发展很快，我们只有不断学习才能跟上时代的脚步，就想这个智能体功能， ChatGLM 也更新的非常快，API 功能也是最近才上线的，感觉非常好用。</p>]]></content>
    
    
    <categories>
      
      <category>工具推荐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验分享</tag>
      
      <tag>工具推荐</tag>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图片识别公式神器推荐</title>
    <link href="/2024/05/19/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/%E5%9B%BE%E7%89%87%E8%AF%86%E5%88%AB%E5%85%AC%E5%BC%8F%E7%A5%9E%E5%99%A8%E6%8E%A8%E8%8D%90/"/>
    <url>/2024/05/19/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/%E5%9B%BE%E7%89%87%E8%AF%86%E5%88%AB%E5%85%AC%E5%BC%8F%E7%A5%9E%E5%99%A8%E6%8E%A8%E8%8D%90/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>你是否遇到在某个资料上看到一个很复杂的公式，但有懒得在word 或者其他文件上打出来。<br>比如这个：<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111841378.png" alt="image.png"><br>如果直接截图的话，只能说非常丑陋。</p><p>推荐一个网站 mathpix，点击 try for free，注册登录。<br><a href="https://mathpix.com/">Mathpix: AI-powered document automation</a></p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111843929.png" alt="image.png"><br>上传图片<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111844471.png" alt="image.png"></p><p>结果非常完美，中间是预览，右侧为 Latex 代码，复制在支持 Latex 的文本编辑器（比如 obsidian），可以直接用。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111845938.png" alt="image.png"><br>真香。</p><p>最后打个广告，我新开了微信公众号（环境猫 er），坚持发布 python 环境业务解决方案，python 办公自动化，GIS 作图经验，学习笔记，办公技巧，工具分享等内容。<br>坚持 Bulid in public ，希望与你一起加油，一同成长。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405102028570.jpg" alt="qrcode_for_gh_b2ae4cd1414a_258.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>工具推荐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具推荐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>知道做到 读书笔记</title>
    <link href="/2024/05/19/05%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E7%9F%A5%E9%81%93%E5%81%9A%E5%88%B0%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/05/19/05%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E7%9F%A5%E9%81%93%E5%81%9A%E5%88%B0%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>[[知道做到：跃迁式学习]]</p><h1 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h1><blockquote><p>[!abstract] 知道做到：跃迁式学习</p><ul><li><img src="https://cdn.weread.qq.com/weread/cover/54/3300017554/t7_3300017554.jpg" alt=" 知道做到：跃迁式学习|200"></li><li>书名： 知道做到：跃迁式学习</li><li>作者： 彼得•霍林斯</li><li>简介： 学习是改善你的生活环境、成为你想成为的人的关键。科学的方法能加速学习进程，让你事半功倍。技能、信息和能力永远不会突然降临，需要你自己去寻找它们，这本书将手把手教你如何以效的方式做到这一点：清晰明了的学习思路，切实可行的学习建议，让你更聪明地学习，而不是更努力地学习。在本书中你将学习到：a.学习的理论和原则以及我们做错了什么；b.你的期望比你的才能更重要；c.如何制定计划，战略性地解构和分析信息、技能；d.如何在少工作的同时获得更好的结果；e.如何利用身边人和环境制造惊人的结果；f.自我练习、调整和纠正的艺术；g.如何积累你的技能，使其成为独一无二的资源。一本书带你快速训练大脑、发展肌肉记忆，了解潜在的心理学和生物学。</li><li>出版时间 </li><li>ISBN： 9787504689542</li><li>分类： 经济理财-管理</li><li>出版社： </li><li>PC 地址： <a href="https://weread.qq.com/web/reader/37032360813ab6d5bg014fdd">https://weread.qq.com/web/reader/37032360813ab6d5bg014fdd</a></li></ul></blockquote><h1 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h1><p>这是一本讲如何学习的书，不厚，很多老生常谈的东西，但对我有用就是好书。<br>读的过程中，我认真梳理了关于如何学习的知识，特意做了学习风格测试（所罗门-费尔德学习方式和偏好指数法）和 16 型人格测试（MBTI 测试），让我更了解自己的优缺点。人是可以改变的，所以我希望通过学习学习方法，提高自己。希望过几年测试我的状态更好。</p><h2 id="学习需要思考的内容"><a href="#学习需要思考的内容" class="headerlink" title="学习需要思考的内容"></a>学习需要思考的内容</h2><ol><li>做这件事对我有什么价值</li><li>做这件事要花费什么成本<ol><li>时间成本</li><li>金钱</li><li>投入产出比</li></ol></li><li>你想在这个领域达到怎样的效果</li><li>你有哪些可以依赖的外部资源<ol><li>[[如何利用环境]]</li><li>你没有的资源是否可以创造和争取</li></ol></li><li>你是否有这方面的天赋（一般以上）</li><li>当前的生活状态是否支持你做这项工作</li></ol><h2 id="学习方法"><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h2><p>再次之前我做了 2 个测试学习风格测试（所罗门-费尔德学习方式和偏好指数法）和 16 型人格测试（MBTI 测试）。我的学习风格偏好 VEPS（视觉、活跃、综合、感觉），人格为表演者-ESFP，荣格认知功能偏好为：主导功能：外倾感觉，辅助功能：内倾情感，第三功能：外倾思考，劣势功能：内倾直觉。测试结果基本符合我的状态，更倾向于外倾感觉，做事流于表面，并不深究。这对我的成长来说并不是好事，因为我也不可能真的成为一个表演者或者销售。因此我要在现有优势的基础上，不断提高自己的理性思考能力。</p><p>以下学习方法主要从书中总结，学习方法远不止于下面这些，以后会不断增加学习方法。我本人是认可费曼学习法的。</p><h3 id="学习金字塔"><a href="#学习金字塔" class="headerlink" title="学习金字塔"></a>学习金字塔</h3><p>学习金字塔理论，由美国学者、著名的学习专家爱德加·戴尔（Edgar Dale）在 1946 年提出，是一种现代学习方式的理论。该理论通过数字形式形象显示了采用不同的学习方式，学习者在两周以后还能记住内容（平均学习保持率）的多少。学习金字塔模型的核心思想在于强调不同学习活动对信息保留效率的影响，并提倡更加互动和主动的学习方法来提高学习效率和记忆持久度。这个模型通过一个逐级展示不同学习方法效果的形象金字塔，揭示了从被动接收到主动参与的学习方式对增强记忆保持的重要性。</p><p>听讲 5%<br>阅读 10%<br>视听 20%<br>演示 30%<br>讨论 50%<br>实践 75%<br>教授给他人 90%</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202404121601505.png" alt="image.png"></p><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><p>实际可能并没有那么绝对，应该是多重方法结合，知识教授他人更难，你必须掌握才能教，所以留存更长，另外一个就是坚持，反复练习。</p><h2 id="费曼学习法"><a href="#费曼学习法" class="headerlink" title="费曼学习法"></a><font color="#245bdb">费曼学习法</font></h2><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202404121708139.png" alt="image.png"></p><p>1. 选择学习目标与概念理解（Concept）<br>2. 回顾与知识梳理（Review）<br>    回顾所学内容，尝试在没有参考资料的情况下，用自己的语言和理解重新阐述该概念。<br>3. 简化与知识重构（Simplify）<br>4. 交给他人（tech）</p><h2 id="布鲁姆分类法"><a href="#布鲁姆分类法" class="headerlink" title="布鲁姆分类法"></a>布鲁姆分类法</h2><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202404121720005.png" alt="image.png"><br>类似于费曼。</p><h2 id="学习的四个具体操作方式"><a href="#学习的四个具体操作方式" class="headerlink" title="学习的四个具体操作方式"></a>学习的四个具体操作方式</h2><h3 id="刻意练习"><a href="#刻意练习" class="headerlink" title="刻意练习"></a>刻意练习</h3><p><strong>专注力决定信息吸收率</strong><br>刻意练习关键在于认真、<strong>专注</strong>、<strong>耐心</strong>，学习慢一点，再慢一点。<br>反复练习而不用心，也没有用，<strong>熟悉不等于掌握</strong><br>学习时，不要被既有经验束缚，以为了解就不深入学习<br>这也适用于健身</p><h4 id="真正的掌握需要不停的练习"><a href="#真正的掌握需要不停的练习" class="headerlink" title="真正的掌握需要不停的练习"></a>真正的掌握需要不停的练习</h4><p>制定 [[每日时刻表]]<br>利用零散的时间进行练习<br>番茄工作法</p><h3 id="交替练习"><a href="#交替练习" class="headerlink" title="交替练习"></a>交替练习</h3><p>将相近的知识交替学习，但要避免打断思考</p><h3 id="间隔重复"><a href="#间隔重复" class="headerlink" title="间隔重复"></a>间隔重复</h3><p>周期学习就像健身一样，每天固定时间点学习</p><h3 id="问题导向式学习法"><a href="#问题导向式学习法" class="headerlink" title="问题导向式学习法"></a>问题导向式学习法</h3><p>问题导向式学习法（Problem-based Learning，简称 PBL）<br>以解题的思路学习，可以是做项目，或者做应用题，然后向上追溯知识点<br>具体步骤：</p><ol><li>明确你的问题。</li><li>明确你已知的信息。</li><li>明确你需要但未知的内容，以及获得这些信息的途径</li><li>列出可行的解决方案，并选择成功几率最大的解决方案。</li><li>将方案<strong>分解</strong>为一个个行动（列出具体的时间计划通常很有用）。</li></ol><h2 id="学习心态调整"><a href="#学习心态调整" class="headerlink" title="学习心态调整"></a>学习心态调整</h2><h3 id="合理自我定位"><a href="#合理自我定位" class="headerlink" title="合理自我定位"></a>合理自我定位</h3><p>认识学习并不是一件简单的事，需要精心设定目标，制定计划。<br><strong>所有的半途而废，都是因为心态错位</strong><br>要乐观，但不要过于乐观<br>战略上藐视敌人，战术上重视敌人<br>饱和式打击，不作无准备之仗<br><strong>保持谦逊</strong>，stay hungry stay foolish<br>养成一个习惯需要 66 天，学习一个技能至少要 25-30 小时</p><h3 id="好奇心"><a href="#好奇心" class="headerlink" title="好奇心"></a>好奇心</h3><p>好奇心不是学习的充分条件，但是可以作为发起学习和自律力耗尽的时候拉你一把。</p><h3 id="提高困惑忍耐力"><a href="#提高困惑忍耐力" class="headerlink" title="提高困惑忍耐力"></a>提高困惑忍耐力</h3><p>当你学习越深入，不知道的越多，要提高困惑忍耐力。试着抽离出来，用全局观，或者短时间沉浸在局部利益，或者调动自己的好奇心，或者给自己打气，或者借助于朋友的宽慰，及时走出困惑沮丧的心境，重新开始学习，切记不要因此放弃当前的学习。这是你突破瓶颈的方法。</p><h2 id="深入学习的方法"><a href="#深入学习的方法" class="headerlink" title="深入学习的方法"></a>深入学习的方法</h2><h3 id="精细提问"><a href="#精细提问" class="headerlink" title="精细提问"></a>精细提问</h3><p>也可以用于讨论<br>六要素提问：who、what、where、when、why、how</p><h2 id="如何利用环境"><a href="#如何利用环境" class="headerlink" title="如何利用环境"></a>如何利用环境</h2><p>我作为一个外倾感觉型的人，非常容易受到环境的影响。<br><strong>与其挑战天性，不如利用环境最高级的自律，是让环境帮你做出正确决策</strong><br>主要是两个方面社会环境和个人环境（大环境和小环境）</p><h3 id="个体环境"><a href="#个体环境" class="headerlink" title="个体环境"></a>个体环境</h3><p>五官感受到的环境，屋子是否整齐，资料夹是否按顺序摆放等等。<br>第一，把资源放在触手可及的地方。<br>第二，把干扰因素关进另一个房间。<br>启动耗能&#x2F;活化能<br>对于较难的工作，即使切换到工作状态都耗费极大的精力。<br>主动抵御沉迷分心事物的冲动，把注意力转移到需要学习或实践的任务上。<br>《心流》（Flow）认为，这种改变环境的方法其实是改变了特定活动的“活化能”。<br>一般来说，对于心生向往的事情，你要降低活化能；对于讨厌的事情，你则要增加活化能。<br>启动学习和练习所需的活化能越少越好。<br>这本书很难做到，我目前也没有到达，只有坚持练习，希望能更丝滑的切换到工作和学习。</p><h3 id="社会环境"><a href="#社会环境" class="headerlink" title="社会环境"></a>社会环境</h3><p>朋友、社会关系<br>积极向上的氛围，相互鼓励的环境。<br>消除不良的氛围，原理刻意贬低和质疑你的人。<br>榜样的力量，向榜样学习<br>向优秀的人和群体靠拢</p>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>读书笔记</tag>
      
      <tag>方法论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>卡片笔记写作法 精读笔记 01</title>
    <link href="/2024/05/19/05%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95%20%E7%B2%BE%E8%AF%BB%E7%AC%94%E8%AE%B0%2001/"/>
    <url>/2024/05/19/05%20%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E5%8D%A1%E7%89%87%E7%AC%94%E8%AE%B0%E5%86%99%E4%BD%9C%E6%B3%95%20%E7%B2%BE%E8%AF%BB%E7%AC%94%E8%AE%B0%2001/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="熟悉不等于理解"><a href="#熟悉不等于理解" class="headerlink" title="熟悉不等于理解"></a>熟悉不等于理解</h2><p><em>单纯的重复阅读没有任何意义，无论是对理解还是对学习都是如此。甚至，我们能不能将其称为“学习”都还值得商榷。</em></p><p>#感悟 熟悉不等于掌握，看书、听书、看电影、看视频都一样，看再多都没有用，包括做项目也一样，不总结没有用，就想我之前准备考试一样，不重复做题，不可以联系，不从大脑里提取是学不会知识的，学习必须动笔，必须动手。 ^9c54ce</p><h2 id="笔记的分类"><a href="#笔记的分类" class="headerlink" title="笔记的分类"></a>笔记的分类</h2><p>分为闪念笔记文献笔记和永久笔记<br>Titles： 卡片笔记写作法 精读笔记 01</p><hr><h2 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h2><blockquote><p>[!abstract] 卡片笔记写作法：如何实现从阅读到写作</p><ul><li><img src="https://cdn.weread.qq.com/weread/cover/15/YueWen_39136896/t7_YueWen_39136896.jpg" alt=" 卡片笔记写作法：如何实现从阅读到写作|200"></li><li>书名： 卡片笔记写作法：如何实现从阅读到写作</li><li>作者： 申克·阿伦斯</li><li>简介： 卢曼的“盒中笔记”通常很简短，因为这些只是他庞大繁杂研究中的索引，等需要时，他会借由这些线头进行延伸思考，然后不断链接知识要点，从而形成自己的知识树。你也可以试试。</li><li>出版时间 2021-06-01 00:00:00</li><li>ISBN： 9787115564672</li><li>分类： 文学-语言文字</li><li>出版社： 人民邮电出版社</li><li>PC 地址： <a href="https://weread.qq.com/web/reader/3d8326d072552e803d87c41">https://weread.qq.com/web/reader/3d8326d072552e803d87c41</a></li></ul></blockquote><p>2024 年认真读书，第 2 本卡片笔记写作法，这本书干货很多，要分成很多期，我会慢慢整理。</p><h2 id="推荐序"><a href="#推荐序" class="headerlink" title="推荐序"></a>推荐序</h2><h3 id="认知与元认知"><a href="#认知与元认知" class="headerlink" title="认知与元认知"></a>认知与元认知</h3><p>认知为我们学到的内容，看到的事物；元认知是意识到我们学到的内容，看到的事物。元认知是认知的认知，就想方法论是方法的方法，有点像二阶求导。<br>在认知上层再加工，再连接，就是卡片学习法。</p><h3 id="卡片笔记的作用"><a href="#卡片笔记的作用" class="headerlink" title="卡片笔记的作用"></a>卡片笔记的作用</h3><p>增加了学习知识的效率，引出<strong>必要难度</strong>理论。<br>必要难度，人的记忆有两种机制，存储强度与提取强度，存储与提取负相关，也就是说，存入记忆越容易，提取出来越困难；反之，如果你有些吃力地存入，知识提取会更方便，越容易越难以掌握。<br>建立索引是增加必要难度的途径。<br>建立索引的理性分为</p><ol><li>主题索引</li><li>前后关联</li><li>临近关联</li><li>笔记关联<br>通过对笔记的组合、对比形成新的文章，新的见解。</li></ol><p><strong>未来已至，只是分布得不均匀。</strong></p><h2 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h2><p>高智商与成就没有决定性关系，而自律才是起最大作用的。<br>（Self-Discipline Outdoes IQ in Predicting Academic Performance of Adolescents）</p><h3 id="如何做到自律"><a href="#如何做到自律" class="headerlink" title="如何做到自律"></a>如何做到自律</h3><p>依靠意志力形成自绝没那么容易，意志力是一种有限的资源，它消耗得很快，而且从长期来看，也没有那么多手段快速提升意志力。但我们可以通过改变环境，来减少意志力的消耗。当周围没有巧克力棒的时候，自然不需要靠意志力来拒绝美食的诱惑。<br>如果一个人特别想做某件事，他也用不着靠意力去完成。长期利益和短期利益之间不存在冲突，所以每项有趣、有意义、明确的任务都会被完成，而且这样的任务每次都能比靠意志力完成得好。如果做一件事不是因为你有意志力，而是根本不需要使用意志力，那就意味着你离成功不远了。而组织写作和记笔记就能发挥这样的作用<br>所以如何做到自律，那就是把任务当作自己的兴趣，减少或者不使用意志力驱动。</p><h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><h3 id="关于写作，你需要知道的"><a href="#关于写作，你需要知道的" class="headerlink" title="关于写作，你需要知道的"></a>关于写作，你需要知道的</h3><p>邓宁—克鲁格效应 (Kruger and Dunning, 1999）成绩差但意识不到自己的不足。<br>“冒牌货综合征”，优秀的学生时常感到自己不能胜任某项工作。<br>思考：给自己清晰的定位，保持谦逊，保持好奇，要敢于去尝试，感兴趣的事情就放手去学，去做。</p><h4 id="GTD-的要义"><a href="#GTD-的要义" class="headerlink" title="GTD 的要义"></a>GTD 的要义</h4><p>戴维·艾伦 (David Allen)在《搞定》(Getting Things Done, 2001) 提出“GTD”<br>将所有要做的事情罗列出来，按照<strong>既定的方法</strong>处理，并<strong>定期回顾</strong>。</p><h4 id="GTD-的作用"><a href="#GTD-的作用" class="headerlink" title="GTD 的作用"></a>GTD 的作用</h4><p>使任务不占用心智，达到心如止水，内心平静，专注当下。提供了一种解决问题的框架，因为大多数注意力分散的情况并不是源于我们的环境，而是来自我们纷乱的想法。<br>即所谓想的太多，而做的太少。GTD 就是把想法归想法，执行归执行，通过回顾来联系。<br>GTD 适用于做事，而不能简单的适用于写作，因为写作无法准确的分解下一步。需要一个新的系统-卡片笔记。</p><blockquote><p>卢曼语录：”我只做容易的事情，我只在马上知道要怎么写的时候才会写作。如果我有片刻的动摇，我就会把这件事放在一边，然后继续做别的事”</p></blockquote><p>思考: 这里的容易，并非真正的容易，而是只是否让自己处于心流状态的工作，跟随兴趣而出发，不同的时间，不同的状态，不断在不同的领域积累。</p><h4 id="卢曼笔记的工作原理"><a href="#卢曼笔记的工作原理" class="headerlink" title="卢曼笔记的工作原理"></a>卢曼笔记的工作原理</h4><ol><li>卡片分类管理，分为闪念笔记、文献笔记和永久笔记。</li><li>记录笔记时，不是照抄原文，而是加上自己的思考和转述，并表明出处。</li><li>思考与关联，与历史笔记的关联，通过建立大纲笔记、索引笔记串联笔记系统。</li><li>组合，相关笔记组合为新的笔记。</li><li>时常回顾，分析各个笔记之间的关联。</li></ol><h3 id="关于写作，你需要做的"><a href="#关于写作，你需要做的" class="headerlink" title="关于写作，你需要做的"></a>关于写作，你需要做的</h3><h4 id="写作的具体步骤"><a href="#写作的具体步骤" class="headerlink" title="写作的具体步骤"></a>写作的具体步骤</h4><ol><li>记闪念笔记。随时记录灵感，想法。想法来之不易，要珍惜，及时记录。及时整理回顾。建立自己的闪念笔记系统。</li><li>记录文献笔记。文献笔记要精读，要一遍记录一遍读，珍惜好作品的想法，用自己的语言进行阐述。语句简练，做好标记和来源。建立自己的文献管理系统。</li><li>记永久笔记。通过阅读闪联笔记和文献笔记，思考和兴趣所在的主题，将笔记进行组合和扩展，形成一篇主题项目的永久笔记。这种笔记上的思想不是为了收集，而是为了衍生想法、论点和讨论。及时清理闪念笔记，文献笔记及时归纳，不要让闪念笔记成为垃圾桶。</li><li>将永久笔记和文献笔记建立关联，建立双链笔记。</li><li>对笔记进行扩展，比如某个主题差什么环节，有什么新的进展。</li><li>一个主题足够丰富，对主题内的笔记进行整理排序，剔除，改进。</li><li>将主题整理一篇连贯的文章。</li><li>校对，审核，发表</li></ol>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>读书笔记</tag>
      
      <tag>方法论</tag>
      
      <tag>写作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在excel中使用python 快速作图示例</title>
    <link href="/2024/05/19/04%20%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/%E5%9C%A8excel%E4%B8%AD%E4%BD%BF%E7%94%A8python%20%E5%BF%AB%E9%80%9F%E4%BD%9C%E5%9B%BE%E7%A4%BA%E4%BE%8B/"/>
    <url>/2024/05/19/04%20%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/%E5%9C%A8excel%E4%B8%AD%E4%BD%BF%E7%94%A8python%20%E5%BF%AB%E9%80%9F%E4%BD%9C%E5%9B%BE%E7%A4%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Excel 中可以使用 python 算是一个旧闻了，是 python 之父 Guido van Rossum 加入微软的重要产品。刚出来的第一时间我也尝鲜了，最近作图的时候，再次使用了这个功能，感觉非常方便，推荐大家也用一下。<br><strong>优点：</strong></p><ol><li>Python 在云端运行，无需部署环境。</li><li>可以编写脚本来自动化日常的 Excel 任务，如数据整理、图表生成等，提高工作效率。</li><li>快速响应，可视化选择数据，调整原始数据方便，所见即所得，比 jupyter notebook 更丝滑。<br><strong>缺点：</strong><br>云端运行的 python，对网速要求高，不方便加载除了标准库以外的第三方库。<br>好的，那我们就以日常工作中水质折线图为例，探究下 Excel 中使用 python 的魅力。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405170912976.png" alt="在excel中使用python.png"></li></ol><h2 id="基础条件"><a href="#基础条件" class="headerlink" title="基础条件"></a>基础条件</h2><p>支持 python 的 excel 版本。我是用的是 office 365。<br><em>Excel 中的 Python 目前为预览版，可能会根据反馈进行更改。若要使用此功能，请加入 <a href="https://insider.microsoft365.com/join/windows">Microsoft 365 会员计划</a>，并选择“<strong>Beta 版频道</strong>”预览体验成员级别。</em><br>Excel 中的 Python 包括 anaconda 提供的一些标准 Python 库，用于提高数据分析和数据可视化能力。包括 Matplotlib、NumPy、Pandas、Seaborn、Statsmodels 等。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405161838543.png" alt="image.png"></p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><p>一组在线水质检测数据，包括水质站点监测值和监测时间。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405161843018.png" alt="image.png"></p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>一、选择一个空单元格，点击公式-插入 python<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405161845518.png" alt="image.png"></p><p>二、数据结构预览<br>单元格输入以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">df=xl(<span class="hljs-string">&quot;A1:G98&quot;</span>, headers=<span class="hljs-literal">True</span>)<br>df[<span class="hljs-string">&#x27;监测时间&#x27;</span>] = pd.to_datetime(df[<span class="hljs-string">&#x27;监测时间&#x27;</span>])<br><span class="hljs-comment"># 确保时间列是索引</span><br>df.set_index(<span class="hljs-string">&#x27;监测时间&#x27;</span>, inplace=<span class="hljs-literal">True</span>)<br>df.describe()<br></code></pre></td></tr></table></figure><p>按快捷键 crtl+enter 得到数据集结果。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405161847142.png" alt="image.png"><br>仔细看下 excel 界面:<br>1 为代码输入区，可以调整宽度，自带代码高亮和代码提示。<br>2 为选择输出类型切换，包括值和 python 对象。<br>3 为结果展示区域，包括图片或者其他信息，图片的话需要调整单元格宽度。<br>4 为诊断信息，就像 python 的命令结果窗口，会给出成功或者报错信息。<br>可以说是一个简单的 IDE，五脏俱全。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405161853316.png" alt="image.png"><br>三、绘图<br>选择一个较大的区域，最好是合并单元格，点击公式-插入 python。<br>单元格输入以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br><span class="hljs-comment"># 解决坐标轴刻度负号乱码</span><br>plt.rcParams[<span class="hljs-string">&quot;font.sans-serif&quot;</span>] = [<span class="hljs-string">&quot;Simhei&quot;</span>]  <br>plt.rcParams[<span class="hljs-string">&quot;axes.unicode_minus&quot;</span>] = <span class="hljs-literal">False</span><br><span class="hljs-comment"># 将监测时间列转换为datetime类型</span><br>df=xl(<span class="hljs-string">&quot;A1:G98&quot;</span>, headers=<span class="hljs-literal">True</span>)<br>df[<span class="hljs-string">&#x27;监测时间&#x27;</span>] = pd.to_datetime(df[<span class="hljs-string">&#x27;监测时间&#x27;</span>])<br><span class="hljs-comment"># 确保时间列是索引</span><br>df.set_index(<span class="hljs-string">&#x27;监测时间&#x27;</span>, inplace=<span class="hljs-literal">True</span>)<br><span class="hljs-comment"># 使用matplotlib绘制折线图</span><br>plt.figure(figsize=(<span class="hljs-number">10</span>, <span class="hljs-number">7</span>))  <span class="hljs-comment"># 设置图表大小</span><br><span class="hljs-keyword">for</span> column <span class="hljs-keyword">in</span> df.columns:<br>    plt.plot(df.index, df[column], label=column)  <span class="hljs-comment"># 绘制每列的折线图</span><br><span class="hljs-comment"># 添加标准值线（值为6），蓝色虚线</span><br>plt.axhline(<span class="hljs-number">6</span>, color=<span class="hljs-string">&#x27;blue&#x27;</span>, linestyle=<span class="hljs-string">&#x27;--&#x27;</span>, label=<span class="hljs-string">&#x27;标准值&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;5月各站点高锰酸盐指数变化趋势图&#x27;</span>)  <span class="hljs-comment"># 设置图表标题</span><br><span class="hljs-comment"># plt.xlabel(&#x27;监测时间&#x27;)  # 设置x轴标签</span><br>plt.ylabel(<span class="hljs-string">&#x27;监测值：mg/L&#x27;</span>)  <span class="hljs-comment"># 设置y轴标签</span><br>plt.xticks(rotation=<span class="hljs-number">0</span>)  <br>plt.tight_layout()  <span class="hljs-comment"># 自动调整子图参数，使之填充整个图像区域</span><br><span class="hljs-comment"># 修改图例位置</span><br>plt.legend(loc=<span class="hljs-string">&#x27;lower left&#x27;</span>, bbox_to_anchor=(<span class="hljs-number">0</span>, -<span class="hljs-number">0.15</span>), ncol=<span class="hljs-built_in">len</span>(df.columns), frameon=<span class="hljs-literal">False</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p>结果如下：<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405161903435.png" alt="image.png"><br>利用 python 的 matplotlib 库绘图，就是这么丝滑。如果下次需要再次绘图，那么就不需要重复设置了，直接修改数据就好了。发现数据存在异常，修改异常值也是快速更新结果，非常方便。</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>这只是 excel 中使用 python 的一个小小示例，相信它能做的还有更多。有点担心 vba 的地位了。<br>最后，如果这篇文章有帮助到你，记得点赞，关注哦。<br>也欢迎关注我的微信公众号：环境猫 er。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405192215003.jpg" alt="qrcode_for_me.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验分享</tag>
      
      <tag>python</tag>
      
      <tag>excel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>忍痛分享一个标签页插件</title>
    <link href="/2024/05/13/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/%E5%BF%8D%E7%97%9B%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E6%A0%87%E7%AD%BE%E9%A1%B5%E6%8F%92%E4%BB%B6/"/>
    <url>/2024/05/13/03%20%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/%E5%BF%8D%E7%97%9B%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E6%A0%87%E7%AD%BE%E9%A1%B5%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>如果你想要一个自定义收藏页面的标签页插件，他没有广告，而且支持很多插件，如股票、时间、倒计时、备忘录，那么我必须推荐你一个插件了。</p><p>itab 标签页。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405131938405.png" alt="微信截图_20240513193649.png"></p><p>标签页可以分组，可以自定义图标，很多都能自动识别 logo。这类产品很多，但是完成度最高的目前就是 itab，不是广告，纯粹自来水。</p>]]></content>
    
    
    <categories>
      
      <category>工具推荐</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具推荐</tag>
      
      <tag>浏览器插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>prophet时间序列模型水质预测应用</title>
    <link href="/2024/05/13/01%20%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/prophet%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%A8%A1%E5%9E%8B%E6%B0%B4%E8%B4%A8%E9%A2%84%E6%B5%8B%E5%BA%94%E7%94%A8/"/>
    <url>/2024/05/13/01%20%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/prophet%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%A8%A1%E5%9E%8B%E6%B0%B4%E8%B4%A8%E9%A2%84%E6%B5%8B%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此前已经分析了，ARIMA 模型在水质预测中的应用，今天用 prophet 模型测试下再水质预测中的效果。</p><h2 id="Prophet-简介"><a href="#Prophet-简介" class="headerlink" title="Prophet 简介"></a>Prophet 简介</h2><p>Prophet 是 Facebook 于2017年开源的一个时间序列预测框架，特别适合于处理具有明显趋势性和季节性的数据。该模型设计初衷是为了让非专业的数据科学家也能轻松上手进行复杂的时间序列分析，同时也能满足专业人士对于模型灵活性和准确性的需求，总之，就很香。</p><h2 id="Prophet-模型特点"><a href="#Prophet-模型特点" class="headerlink" title="Prophet 模型特点"></a>Prophet 模型特点</h2><p><strong>易用性</strong>：Prophet 提供了一个高度封装的 API，用户只需要提供时间戳（ds，通常为日期）和观测值（y，即随时间变化的目标变量），就可以快速构建预测模型，而无需深入理解复杂的统计或机器学习理论。<br><strong>自动特征提取</strong>：模型自动识别并处理时间序列中的趋势（长期增长或下降）、季节性（如周、月、年等周期性模式）以及节假日效应。用户可以轻松地添加自定义的季节性模式和节假日信息。<br><strong>灵活性</strong>：模型允许用户调整多种参数来控制预测的行为，比如趋势的平滑程度、季节性模式的复杂度等，以适应不同数据的特点。<br><strong>异常值和缺失值处理</strong>：Prophet模型对于数据中的异常值和缺失值具有一定的鲁棒性，能够在不影响整体预测的情况下处理这些问题。<br><strong>changepoints</strong>：模型能够自动检测并适应时间序列中的变化点，即数据中的非平稳部分，这对于预测具有突然变化的时间序列尤为重要。<br><strong>可视化</strong>：Prophet还提供了丰富的可视化工具，帮助用户直观地理解模型的各个组成部分（如趋势、季节性）以及预测结果，便于模型诊断和结果解释。<br><strong>Python 和 R 支持</strong>：Prophet 在 Python 和 R 两种语言中都有实现，方便不同背景的用户使用。</p><p>从上面的特点看出，完美适配水质预测。</p><h2 id="Prophet-python-安装"><a href="#Prophet-python-安装" class="headerlink" title="Prophet python 安装"></a>Prophet python 安装</h2><p>在网上能看到很多奇奇怪怪的安装指令，比如 fbprophet 库，已经不能用了，以我为准哈，下面是最新可用的安装方法。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">pip install prophet<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405131841729.png" alt="image.png"></p><h2 id="Python-Prophet-实践"><a href="#Python-Prophet-实践" class="headerlink" title="Python Prophet 实践"></a>Python Prophet 实践</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd  <br><span class="hljs-keyword">from</span> prophet <span class="hljs-keyword">import</span> Prophet  <br><span class="hljs-keyword">from</span> prophet.plot <span class="hljs-keyword">import</span> add_changepoints_to_plot  <br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np  <br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br></code></pre></td></tr></table></figure><h3 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h3><p>每个项目的数据准备不一样，可以是在线数据，也可以是本地数据，具体略过。<br>数据结构为时间和值，Prophet 格式形式为 ds 和 y。</p><h3 id="数据粒径和数据集尺寸"><a href="#数据粒径和数据集尺寸" class="headerlink" title="数据粒径和数据集尺寸"></a>数据粒径和数据集尺寸</h3><p>Prophet 非常适合做周期数据，也适应多种粒径，所以无需担心他无法识别小时或者日的尺度，<br>还有因为他适合做周期数据，因此给数据集时，应给他至少一个周期的数据，不然预测出来效果差很多。<br>比如同一个站点，同一个因子，给一个月的数据集和一年的数据集结果分别如下图所示：<br><strong>一个月的数据集预测结果</strong><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405131854796.png" alt="Figure_5.png"><br><strong>一年的数据结果</strong><br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405131855235.png" alt="Figure_2.png"></p><p>由上面 2 个图可以看出，完全是天差地别，也能看出这个模型非常厉害，处理周期波动数据非常精准，在一年的尺度下准确的预测了 4 月后水质将继续升高，并没有被短期下降数据而干扰。</p><h2 id="原始数据集预览"><a href="#原始数据集预览" class="headerlink" title="原始数据集预览"></a>原始数据集预览</h2><p>综上，我们选择一年的数据集，开始预测。原始数据如下：<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405131858976.png"><br>可以看到数据集质量一般，这也是实际生成环境中的数据，但是 Prophet 能够识别异常值，不用担心他会报错。</p><h2 id="模型搭建预览结果"><a href="#模型搭建预览结果" class="headerlink" title="模型搭建预览结果"></a>模型搭建预览结果</h2><p>模型接口非常简单，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 初始化Prophet模型  </span><br>model = Prophet()  <br><span class="hljs-comment"># 拟合模型  </span><br>model.fit(df)  <br><span class="hljs-comment"># 定义未来预测的时间段，例如预测未来7天的水质  </span><br>future = model.make_future_dataframe(periods=<span class="hljs-number">7</span>)  <span class="hljs-comment"># 7天预测期  </span><br>future.tail()  <span class="hljs-comment"># 查看预测数据框的末尾几行以确认预测时间段  </span><br><span class="hljs-comment"># 进行预测  </span><br>forecast = model.predict(future)  <br><span class="hljs-comment"># 绘制预测结果  </span><br>fig1 = model.plot(forecast)  <br>plt.title(<span class="hljs-string">&#x27;Water Quality Prediction&#x27;</span>)  <br>plt.show()  <br><span class="hljs-comment"># 添加变化点到图表中（如果需要）  </span><br>fig2 = model.plot(forecast)  <br>ax = fig2.gca()  <br>add_changepoints_to_plot(ax, model, forecast)  <br>plt.title(<span class="hljs-string">&#x27;Water Quality Prediction with Changepoints&#x27;</span>)  <br>plt.show()  <br><span class="hljs-comment"># 打印预测数据框查看预测详情  </span><br><span class="hljs-built_in">print</span>(forecast[[<span class="hljs-string">&#x27;ds&#x27;</span>, <span class="hljs-string">&#x27;yhat&#x27;</span>, <span class="hljs-string">&#x27;yhat_lower&#x27;</span>, <span class="hljs-string">&#x27;yhat_upper&#x27;</span>]])<br></code></pre></td></tr></table></figure><p>预测结果为图 2 所示，变化点如下图，模型将每次突变点都标记出来了。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405131902308.png" alt="Figure_3.png"></p><p>预测结果 forecast<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405131913145.png" alt="image.png"></p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>相比 arima，Prophet 更加简单易用，且成熟接口更多，出图预览更方便，本文还没有对添加节假日进行测试，但已经非常够用了。<br>对比 LSTM，预测时间少非常多，配置也更简单，真的很不错，如果有兴趣可以深入尝试。</p><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><a href="/2024/05/09/01%20%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/ARIMA%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%A8%A1%E5%9E%8B%E6%B0%B4%E8%B4%A8%E9%A2%84%E6%B5%8B%E5%BA%94%E7%94%A8/" title="ARIMA时间序列模型水质预测应用">ARIMA时间序列模型水质预测应用</a><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405131915810.jpg" alt="pexels-pixabay-50677.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>时间序列</category>
      
    </categories>
    
    
    <tags>
      
      <tag>时间序列模型</tag>
      
      <tag>水环境分析</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>信息收集方法合集 第2期</title>
    <link href="/2024/05/12/04%20%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86%20%E7%AC%AC2%E6%9C%9F/"/>
    <url>/2024/05/12/04%20%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86%20%E7%AC%AC2%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>好的，我们继续讲所有信息的收集方法，今天讲百度文库、淘豆网、豆丁网、道客巴巴、原创力文档及专利的获取，还包括搜索信息的注意事项。如果有帮助到你，非常荣幸，我会坚持分享我的学习、工作经验。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111825908.png" alt="image.png"></p><h2 id="其他文档"><a href="#其他文档" class="headerlink" title="其他文档"></a>其他文档</h2><p>这里泛指所有上传在百度文库、淘豆网、豆丁网、道客巴巴、原创力文档等网站上的文件，也是使用比较高频的一个方法，这里先叠个甲，我并非不尊重知识产权，只是这些网站的内容大多是在公开资料上爬取然后展示的内容，包括很多标准等等，在用于学习的情况下，下载下来无可厚非，如果以下方法，有侵害到平台权利，我就删掉这篇文章，相信信息只有流转才能产生价值。<br>好的我们继续。</p><p>打开浏览器应用商店，推荐 edge 、chrome浏览器，安装 tampermonkey 插件，点击插件获取新脚本，在 greasy fork 脚本商店中搜索文库下载器，一定要是 waahah 这个做这的脚本，其他也有一些下载脚本，但是我推荐这个是亲测可用的，当然也鼓励大家自己多尝试。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111426186.png" alt="image.png"></p><p>安装好后，打开想要下载的网站，当脚本检测到对应的网站后，会在左上角悬浮蓝色的工具栏，在非百度文库下，先点击自动展开，带文件全部展开后，然后点击导出 PDF。注意如果导出 pdf 效果不好，可以直接在浏览器点击打印, 用虚拟打印机保存为 pdf。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111431609.png" alt="image.png"></p><h2 id="专利"><a href="#专利" class="headerlink" title="专利"></a>专利</h2><p>专利之星只需要注册账号就可以查看公开专利内容，非常好用。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111415055.png" alt="image.png"></p><h2 id="常规搜索方法"><a href="#常规搜索方法" class="headerlink" title="常规搜索方法"></a>常规搜索方法</h2><p>比如在谷歌、百度上搜索，如果精确搜索的话，要想要关键词。比如制定文件格式可以用<br>filetype: pdf 关键词（pdf 可以替换 doc、ppt、jpg 等）<br>还有很多其他比较复杂的搜索关键词，其实用的频率并不高，这里我就不多赘述。<br>谷歌搜索注意用对地址，一般 vpn 的话会默认 vpn 代理地址，下面这个链接可以<br><a href="http://www.google.com/ncr">www.google.com/ncr</a><br>想要查询政府文件或者公开文件，应该熟悉他们的公文结构，了解固定的关键词。<br>比如查询环评原文则在某某报告后面加上”受理”、”公示”字样。</p><p>AI 搜索<br>推荐秘塔搜索，用做主体学习非常不错，可以选择学术、网页、播客三种类型，除了生成分析内容外，更重要的是将相关来源标出，让我们更准确的获取信息。如果<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405122017540.png" alt="image.png"></p><p>我获取信息的方法就是这些了，新人一枚，如果有帮助到你，请点赞关注收藏，谢谢！</p><p>最后打个广告，我新开了微信公众号（环境猫 er），坚持发布 python 环境业务解决方案，python 办公自动化，GIS 作图经验，学习笔记，办公技巧，工具分享等内容。<br>坚持 Bulid in public ，希望与你一起加油，一同成长。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405102028570.jpg" alt="qrcode_for_gh_b2ae4cd1414a_258.jpg"></p><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><a href="/2024/05/11/04%20%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86%20%E7%AC%AC1%E6%9C%9F/" title="信息收集方法合集 第1期">信息收集方法合集 第1期</a>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验分享</tag>
      
      <tag>方法论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>信息收集方法合集 第1期</title>
    <link href="/2024/05/11/04%20%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86%20%E7%AC%AC1%E6%9C%9F/"/>
    <url>/2024/05/11/04%20%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86%20%E7%AC%AC1%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在工作中，经常被问到某个文件怎么下载，原文来自哪里。索性把我知道的所有信息收集方法全部整理一遍，希望对大家有用，如果有帮助到你，非常荣幸，我会坚持分享我的学习、工作经验。</p><p><strong>信息种类</strong>：包括法律法规、标准导则、中英文论文、书籍、专利、环评、验收报告以及其他公开的资料。<br>信息收集框架结构如下图，我会分两期介绍所有信息的获取方法，第一期讲法律法规标准导则、论文、书籍等资料的获取，第二期讲百度文库、淘豆网、豆丁网、道客巴巴、原创力文档及专利的获取，还包括搜索信息的注意事项。随后会持续出关于文献知识库管理的内容，欢迎关注哦。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111825908.png" alt="image.png"></p><h3 id="法律法规、标准导则"><a href="#法律法规、标准导则" class="headerlink" title="法律法规、标准导则"></a>法律法规、标准导则</h3><p>通常这些内容是公开的，在政府网站上可以查到，这里推荐在聚合的网站上去下载，比如环评云助手、国家标准全文公开系统、环保小智等，这些网站不光可以查文件，还可是查询是否有效。</p><p><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111432139.png" alt="image.png"></p><h3 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h3><p>论文也是我们获取高质量信息的来源，中文文献一般是知网、万方、维普等平台最多，但这些网站一旦出了大学获取就比较困难，这里推荐一个网站，书童图书馆，需要购买账号，可以很低价的方式获得一个长期的会员，可以下载所有的文献。<br>推荐之前先叠个甲，这部分属于灰色地带，但从学习的角度讲，文献公开是对学习研究环境非常有利的，不管政策怎么变，及时这个网址可能被 ban，也有千万个网站出来，就像是 Z-library 一样。</p><p>英文文献推荐 Sci-hub 和 Arxiv。英文文献的获取难度要低于中文，甚至很多文献可以找到代码和数据集，国内做的相对较差。<br>SCI-HUB<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111749350.png" alt="image.png"></p><p>Arxiv 是本是存放物理学、数学、计算机科学、生物学与数理经济学的论文预印本的网站，是没有被同行审议过的文章都先上传在上面，后面上传的论文越来越多人，影响越来越大，目前已经是非常重要的论文网站了。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111759563.png" alt="image.png"></p><h3 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h3><p>获取电子书的方法也很多，首推 Z-library。经常被 ban，目前仍在坚强运营。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111802327.png" alt="image.png"></p><p> Z-library 经常变动网址，有时候需要魔法，嫌麻烦可以用鸠摩搜书先检索，一般书都有。<br>然后是 GitHub，有些开源项目的书会发布在 GitHub 上，比如鸢尾花系列，Python 工匠等。<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405111804169.png" alt="image.png"><br>最后强烈推荐微信读书，原因有：</p><ol><li>微信读书包含的出版书籍很多，且支持导入 PDF；</li><li>很多出版社做了真人朗读，听书非常方便，</li><li>读书送时长和书币让你基本不需要花钱，让你直接拥有一个图书馆。</li><li>读书笔记与 obsidian 等软件有联动，方便总结归纳，</li><li>多平台适配，书籍无需过多整理，减轻负担。<br>我已经成为微信读书的重度用户了，也欢迎喜欢微信读书的朋友，留言交流，一同进步。</li></ol><p>新人一枚，如果有帮助到你，请点赞关注，非常感谢。</p><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><a href="/2024/05/12/04%20%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%96%B9%E6%B3%95%E5%90%88%E9%9B%86%20%E7%AC%AC2%E6%9C%9F/" title="信息收集方法合集 第2期">信息收集方法合集 第2期</a>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经验分享</tag>
      
      <tag>方法论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ARIMA时间序列模型水质预测应用</title>
    <link href="/2024/05/09/01%20%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/ARIMA%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%A8%A1%E5%9E%8B%E6%B0%B4%E8%B4%A8%E9%A2%84%E6%B5%8B%E5%BA%94%E7%94%A8/"/>
    <url>/2024/05/09/01%20%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/ARIMA%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%A8%A1%E5%9E%8B%E6%B0%B4%E8%B4%A8%E9%A2%84%E6%B5%8B%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="ARIMA-时间序列模型简介"><a href="#ARIMA-时间序列模型简介" class="headerlink" title="ARIMA 时间序列模型简介"></a>ARIMA 时间序列模型简介</h2><p>时间序列是研究数据随时间变化而变化的一种算法，是一种预测性分析算法。它的基本出发点就是事物发展都有连续性，按照它本身固有的规律进行。ARIMA(p,d,q)模型全称为差分自回归移动平均模型  (Autoregressive Integrated Moving Average Model,简记 ARIMA). 是比较成熟且简单的时间预测模型之一。其中 AR 为自回归, I 为差分, MA 为移动平均。<br>趋势参数：</p><ul><li>p：趋势自回归阶数。</li><li>d：趋势差分阶数。</li><li>q：趋势移动平均阶数。</li></ul><h2 id="差分"><a href="#差分" class="headerlink" title="差分"></a>差分</h2><p>差分（difference）又名差分函数或差分运算，差分的结果反映了离散量之间的一种变化，是研究离散数学的一种工具。它将原函数f(x) 映射到f(x+a)-f(x+b) 。差分运算，相应于微分运算，是微积分中重要的一个概念。总而言之，差分对应离散，微分对应连续。差分又分为前向差分、向后差分及中心差分三种。<br>通常情况下我们用到的是前向差分公式如下：<br>xk&#x3D;x0+kh,(k&#x3D;0,1,…,n)<br>△f(xk)&#x3D;f(xk+1)−f(xk)<br>差分的阶<br>称为阶的差分，即前向阶差分 ，如果数学运用根据数学归纳法，有其中，为二项式系数。特别的，有前向差分有时候也称作数列的二项式变换</p><h2 id="在高锰酸盐指数序列预测可行性的说明"><a href="#在高锰酸盐指数序列预测可行性的说明" class="headerlink" title="在高锰酸盐指数序列预测可行性的说明"></a>在高锰酸盐指数序列预测可行性的说明</h2><p>通过观察水质变化趋势，高锰酸盐指数波动不剧烈，存在明显的中心波动规律。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658496447043-88b405af-1be8-4102-9e18-08920fc56b01.png"></p><h2 id="python实现"><a href="#python实现" class="headerlink" title="python实现"></a>python实现</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns<br><span class="hljs-keyword">import</span> warnings<br><span class="hljs-keyword">import</span> pymysql<br><br>warnings.filterwarnings(<span class="hljs-string">&quot;ignore&quot;</span>)  <br><span class="hljs-comment"># 忽略警告，不然一大堆警告，多是python及对应包升高导致，不影响使用</span><br><span class="hljs-keyword">from</span> IPython.core.interactiveshell <span class="hljs-keyword">import</span> InteractiveShell<br>InteractiveShell.ast_node_interactivity = <span class="hljs-string">&quot;all&quot;</span><br><span class="hljs-keyword">from</span> matplotlib.pylab <span class="hljs-keyword">import</span> style  <span class="hljs-comment"># 自定义图表风格</span><br>style.use(<span class="hljs-string">&#x27;ggplot&#x27;</span>)<br><br><span class="hljs-comment"># 解决中文乱码问题</span><br>plt.rcParams[<span class="hljs-string">&#x27;font.sans-serif&#x27;</span>] = [<span class="hljs-string">&#x27;Simhei&#x27;</span>]<br><span class="hljs-comment"># 解决坐标轴刻度负号乱码</span><br>plt.rcParams[<span class="hljs-string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="hljs-literal">False</span><br><br><span class="hljs-comment"># pip install statsmodels</span><br><br><span class="hljs-keyword">from</span> statsmodels.graphics.tsaplots <span class="hljs-keyword">import</span> plot_acf, plot_pacf  <span class="hljs-comment"># 自相关图、偏自相关图</span><br><span class="hljs-keyword">from</span> statsmodels.tsa.stattools <span class="hljs-keyword">import</span> adfuller <span class="hljs-keyword">as</span> ADF  <span class="hljs-comment"># 平稳性检验</span><br><span class="hljs-keyword">from</span> statsmodels.stats.diagnostic <span class="hljs-keyword">import</span> acorr_ljungbox  <span class="hljs-comment"># 白噪声检验</span><br><span class="hljs-keyword">import</span> statsmodels.api <span class="hljs-keyword">as</span> sm  <span class="hljs-comment"># D-W检验,一阶自相关检验</span><br><span class="hljs-keyword">from</span> statsmodels.graphics.api <span class="hljs-keyword">import</span> qqplot  <span class="hljs-comment"># 画QQ图,检验一组数据是否服从正态分布</span><br><span class="hljs-keyword">from</span> statsmodels.tsa.arima.model <span class="hljs-keyword">import</span> ARIMA<br></code></pre></td></tr></table></figure><h3 id="连接数据"><a href="#连接数据" class="headerlink" title="连接数据"></a>连接数据</h3><p>通过数据库，excel 都可以，列名为监测时间、设备名称、设备因子、监测值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">conn_sql</span>():<br>    conn = pymysql.connect(host=<span class="hljs-string">&quot; &quot;</span>,<br>                   port= ,<br>                   user=<span class="hljs-string">&quot; &quot;</span>,<br>                   password=<span class="hljs-string">&quot; &quot;</span>,<br>                   db=<span class="hljs-string">&quot; &quot;</span>,<br>                   charset=<span class="hljs-string">&quot;utf8&quot;</span>)<br>    sql = <span class="hljs-string">&quot;&quot;</span><br>    read_sql = pd.read_sql(sql, conn)<br>    <span class="hljs-keyword">return</span> read_sql<br>read_sql=conn_sql()<br></code></pre></td></tr></table></figure><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">nseri</span>(<span class="hljs-params">s,y </span>):<br>    aidunqiao = read_sql.loc[read_sql[<span class="hljs-string">&#x27;设备名称&#x27;</span>] == s, :]<br>    ai_cod = aidunqiao.loc[read_sql[<span class="hljs-string">&#x27;监测因子&#x27;</span>] == y, :]<br>    ai_cod_mn = ai_cod.loc[:, [<span class="hljs-string">&quot;监测时间&quot;</span>, <span class="hljs-string">&#x27;监测值&#x27;</span>]]<br>    baseline = ai_cod.loc[:, [<span class="hljs-string">&quot;监测时间&quot;</span>, <span class="hljs-string">&#x27;监测值&#x27;</span>]]<br><br>    ai_cod_mn.set_index(<span class="hljs-string">&#x27;监测时间&#x27;</span>, inplace=<span class="hljs-literal">True</span>)<br>    interp_cod_mn = ai_cod_mn[<span class="hljs-string">&quot;监测值&quot;</span>].interpolate()<br>    ai_cod_mn[<span class="hljs-string">&quot;cod&quot;</span>] = interp_cod_mn<br>    starttime = baseline.iloc[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]<br>    rows = baseline.shape[<span class="hljs-number">0</span>]<br>    endtime = baseline.iloc[rows - <span class="hljs-number">1</span>, <span class="hljs-number">0</span>]<br><br>    year_month_day = pd.date_range(starttime, endtime, freq=<span class="hljs-string">&quot;h&quot;</span>).strftime(<span class="hljs-string">&quot;%Y%m%d%h%m%s&quot;</span>)<br>    a_ser = pd.DataFrame(&#123;<span class="hljs-string">&#x27;监测时间&#x27;</span>: year_month_day&#125;)<br>    a_ser.set_index(<span class="hljs-string">&#x27;监测时间&#x27;</span>, inplace=<span class="hljs-literal">True</span>)<br>    df = pd.concat([a_ser, ai_cod_mn], axis=<span class="hljs-number">0</span>, join=<span class="hljs-string">&quot;outer&quot;</span>)<br>    df = df.reset_index(drop=<span class="hljs-literal">False</span>)<br>    df[<span class="hljs-string">&#x27;监测时间&#x27;</span>] = pd.to_datetime(df[<span class="hljs-string">&#x27;监测时间&#x27;</span>])<br>    df1 = df.drop_duplicates(subset=<span class="hljs-string">&quot;监测时间&quot;</span>, keep=<span class="hljs-string">&quot;last&quot;</span>, ignore_index=<span class="hljs-literal">True</span>)<br>    df2 = df1.sort_values(by=<span class="hljs-string">&quot;监测时间&quot;</span>, ignore_index=<span class="hljs-literal">True</span>)<br>    df2[<span class="hljs-string">&quot;cod&quot;</span>] = df2[<span class="hljs-string">&quot;监测值&quot;</span>].interpolate()<br>    df2.drop(columns=<span class="hljs-string">&quot;监测值&quot;</span>, inplace=<span class="hljs-literal">True</span>)<br>    df2.set_index(<span class="hljs-string">&#x27;监测时间&#x27;</span>, inplace=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">return</span> df2<br></code></pre></td></tr></table></figure><p>主要是 将数据生成无空连续的逐小时 时间序列数据 插值方法为线性插值</p><h3 id="数据解读"><a href="#数据解读" class="headerlink" title="数据解读"></a>数据解读</h3><h4 id="查看acf"><a href="#查看acf" class="headerlink" title="查看acf"></a>查看acf</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">df2 = df2.dropna()<br><span class="hljs-comment"># 解决有nan的问题</span><br>plot_acf(df2,lags=<span class="hljs-number">50</span>).show()<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658496966248-a9f853f2-55b2-4728-8ae7-83c26ec56dd7.png"></p><p>解读 拖尾为p 。基本大于0.5 现在和未来有很强的相关性</p><h4 id="单位根检验"><a href="#单位根检验" class="headerlink" title="单位根检验"></a>单位根检验</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始序列的ADF检验结果为：&#x27;</span>,ADF(df2.cod))<br></code></pre></td></tr></table></figure><p>原始序列的ADF检验结果为： (-7.19465930048855, 2.452407467867345e-10, 37, 9199, {‘1%’: -3.431061069214289, ‘5%’: -2.8618542472812902, ‘10%’: -2.5669372687639176}, 11281.50483165621)</p><p>解读：P值小于显著性水平α（0.05），不接受原假设（非平稳序列），说明原始序列是平稳序列。</p><h4 id="白噪声检验"><a href="#白噪声检验" class="headerlink" title="白噪声检验"></a>白噪声检验</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;一阶差分序列的白噪声检验结果为：&#x27;</span>,acorr_ljungbox(df2,lags=<span class="hljs-number">1</span>,return_df =<span class="hljs-built_in">bool</span>))<br></code></pre></td></tr></table></figure><p>一阶差分序列的白噪声检验结果为： lb_stat lb_pvalue 1 7467.631465 0.0</p><p>p值为0小于0.05，不是白噪声</p><p><strong>综上可以采用 arima 模型</strong></p><h4 id="定阶-人工识图"><a href="#定阶-人工识图" class="headerlink" title="定阶 人工识图"></a>定阶 人工识图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#一阶差分，我们不需要这么做，看下代码怎么写的。</span><br>df2_mn=df2.diff(periods=<span class="hljs-number">1</span>, axis=<span class="hljs-number">0</span>).dropna()<br><span class="hljs-comment">#自相关图</span><br>plot_acf(df2,lags=<span class="hljs-number">20</span>).show()<br><span class="hljs-comment">#解读：拖尾 有长期相关性 p 取1 </span><br><span class="hljs-comment">#偏自相关图 </span><br>plot_pacf(df2,lags=<span class="hljs-number">20</span>).show()<br><span class="hljs-comment">#偏自相关图</span><br>plot_pacf(df2,lags=<span class="hljs-number">50</span>).show()<br><span class="hljs-comment">#解读：自相关图，0阶拖尾；偏自相关图，截尾。则ARIMA(p,d,q)=ARIMA(1,0,n)</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658497358538-342dc80a-d890-4386-bc8e-ca67ca811fef.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658497368903-f3dccfbb-c6e0-4aa7-a86c-e78aab590f93.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658497380496-184e826a-d4c3-40a3-aa69-f2413617af0a.png"></p><h4 id="参数调优"><a href="#参数调优" class="headerlink" title="参数调优"></a>参数调优</h4><p>AIC调优</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> statsmodels.tsa.arima.model <span class="hljs-keyword">import</span> ARIMA<br>aic_matrix=[]<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>    tmp=[]<br>    <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>):<br>        <span class="hljs-keyword">try</span>:<br>            tmp.append(ARIMA(df2,order=(p,<span class="hljs-number">0</span>,q)).fit().aic)<br>        <span class="hljs-keyword">except</span>:<br>            tmp.append(<span class="hljs-literal">None</span>)<br>    aic_matrix.append(tmp)<br>aic_matrix<br><br><span class="hljs-comment"># p,q=aic_matrix.stack().idxmin() #最小值的索引</span><br><span class="hljs-comment"># 手动查找最小值 同样为1，0，4</span><br></code></pre></td></tr></table></figure><p>也可以用BIC调优 不再赘述</p><h3 id="模型建立"><a href="#模型建立" class="headerlink" title="模型建立"></a>模型建立</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">model = ARIMA(df2, order=(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>))<br>result_arima = model.fit()<br></code></pre></td></tr></table></figure><h3 id="模型预测"><a href="#模型预测" class="headerlink" title="模型预测"></a>模型预测</h3><p>定义画图函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">pic1</span>(<span class="hljs-params">result_arima,df2</span>):<br>    t1 = <span class="hljs-string">&quot;2022/7/6 00:00:00&quot;</span><br>    t2 = <span class="hljs-string">&quot;2022/7/8 00:00:00&quot;</span><br>    predict_more=result_arima.predict(t1 ,t2 )<br>    t = pd.date_range(t1, t2 , freq=<span class="hljs-string">&quot;h&quot;</span>).strftime(<span class="hljs-string">&quot;%y%m%d%h%m%s&quot;</span>)<br>    new_ticks = pd.date_range(t1, t2 , freq=<span class="hljs-string">&quot;d&quot;</span>).strftime(<span class="hljs-string">&quot;%y%m%d%h%m%s&quot;</span>)<br>    axc.clear()<br>    axc.set_title(<span class="hljs-string">&quot;局部历史值与真实值对比&quot;</span>)<br>    axc.plot(t,df2[t1 :t2],linestyle = <span class="hljs-string">&quot;--&quot;</span>,alpha=<span class="hljs-number">0.5</span>)<br>    axc.plot(t,predict_more,linestyle = <span class="hljs-string">&quot;:&quot;</span>)<br>    axc.legend([<span class="hljs-string">&#x27;真实值&#x27;</span>,<span class="hljs-string">&#x27;预测值&#x27;</span>])<br>    axc.set_xticks(new_ticks)   <br><br>    <span class="hljs-comment"># 创建画布控件</span><br>    canvas = FigureCanvasTkAgg(fig1, master=root)  <span class="hljs-comment"># A tk.DrawingArea.</span><br>    canvas.draw()<br>    canvas.get_tk_widget().place(x=<span class="hljs-number">63</span>,y=<span class="hljs-number">200</span>)<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658497922337-e1e6f543-0dbb-409b-ac68-05a72ef2423a.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">fore_picture</span>(<span class="hljs-params">result_arima,df2</span>):<br>    df3 = df2.reset_index(drop=<span class="hljs-literal">False</span>)<br>    rows = df3.shape[<span class="hljs-number">0</span>]<br>    endtime = df3.iloc[rows - <span class="hljs-number">1</span>, <span class="hljs-number">0</span>]<br>    forecast = pd.Series(result_arima.forecast(<span class="hljs-number">48</span>), index=pd.date_range(endtime, periods=<span class="hljs-number">48</span>, freq=<span class="hljs-string">&#x27;H&#x27;</span>))<br>    df_last = df2.iloc[-<span class="hljs-number">48</span>:]    <br>    data = pd.concat((df_last, forecast), axis=<span class="hljs-number">0</span>)<br>    data.columns = [<span class="hljs-string">&#x27;监测值浓度&#x27;</span>, <span class="hljs-string">&#x27;未来48小时&#x27;</span>]<br>    axc2.clear()<br>    axc2.set_title(<span class="hljs-string">&quot;未来48小时预测&quot;</span>)<br>    axc2.plot(data) <br>    <br>        <span class="hljs-comment"># 创建画布控件</span><br>    canvas = FigureCanvasTkAgg(fig2, master=root)  <span class="hljs-comment"># A tk.DrawingArea.</span><br>    canvas.draw()<br>    canvas.get_tk_widget().place(x=<span class="hljs-number">600</span>,y=<span class="hljs-number">200</span>)<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658497941233-d0387b16-c1dd-4ec5-a2a4-4162e3be9eec.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">compare2</span>(<span class="hljs-params">result_arima,df2</span>):<br>    df3 = df2.reset_index(drop=<span class="hljs-literal">False</span>)<br>    rows = df3.shape[<span class="hljs-number">0</span>]<br>    endtime = df3.iloc[rows - <span class="hljs-number">1</span>, <span class="hljs-number">0</span>]<br>    starttime = df3.iloc[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]<br>    predict=result_arima.predict(starttime , endtime)<br>    axc3.clear()<br>    axc3.set_title(<span class="hljs-string">&quot;全部预测值真实值对比&quot;</span>)<br>    axc3.plot(df2.index,df2[<span class="hljs-string">&#x27;cod&#x27;</span>],linestyle = <span class="hljs-string">&quot;--&quot;</span>,alpha=<span class="hljs-number">0.5</span>)<br>    axc3.plot(df2.index,predict,linestyle = <span class="hljs-string">&quot;:&quot;</span>)<br>    axc3.legend([<span class="hljs-string">&#x27;真实值&#x27;</span>,<span class="hljs-string">&#x27;预测值&#x27;</span>])<br>    canvas = FigureCanvasTkAgg(fig3, master=root)  <span class="hljs-comment"># A tk.DrawingArea.</span><br>    canvas.draw()<br>    canvas.get_tk_widget().place(x=<span class="hljs-number">1200</span>,y=<span class="hljs-number">200</span>)<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658497956069-1c995a76-08cb-44b0-a0b2-9173af977365.png"></p><h3 id="模型可视化及GUI初探"><a href="#模型可视化及GUI初探" class="headerlink" title="模型可视化及GUI初探"></a>模型可视化及GUI初探</h3><p>用Tkinter 实现自动选择站点及因子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 副本</span><br><span class="hljs-keyword">from</span> tkinter.ttk <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span>  tkinter <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> matplotlib<br>matplotlib.use(<span class="hljs-string">&#x27;TkAgg&#x27;</span>)<br><span class="hljs-keyword">from</span> matplotlib.backends.backend_tkagg <span class="hljs-keyword">import</span> FigureCanvasTkAgg<br><span class="hljs-keyword">from</span> matplotlib.figure <span class="hljs-keyword">import</span> Figure<br><br>root = Tk()<br>root.title(<span class="hljs-string">&quot;ARIMA预测模型&quot;</span>)<br>root.geometry(<span class="hljs-string">&quot;1800x900+50+50&quot;</span>)  <span class="hljs-comment"># 长x宽+x*y</span><br>           <br>lb1 = Label(root,text=<span class="hljs-string">&#x27;站点选择&#x27;</span>,fg=<span class="hljs-string">&#x27;black&#x27;</span>, font=(<span class="hljs-string">&#x27;微软雅黑&#x27;</span>,<span class="hljs-number">15</span>),  height=<span class="hljs-number">2</span>,  relief=FLAT)<br>lb2 = Label(root,text=<span class="hljs-string">&#x27;因子选择&#x27;</span>,fg=<span class="hljs-string">&#x27;black&#x27;</span>, font=(<span class="hljs-string">&#x27;微软雅黑&#x27;</span>,<span class="hljs-number">15</span>),  height=<span class="hljs-number">2</span>,  relief=FLAT)<br>lb3 = Label(root,text=<span class="hljs-string">&#x27;预测结果（48h）&#x27;</span>,fg=<span class="hljs-string">&#x27;black&#x27;</span>, font=(<span class="hljs-string">&#x27;微软雅黑&#x27;</span>,<span class="hljs-number">15</span>),  height=<span class="hljs-number">2</span>,  relief=FLAT)<br><span class="hljs-comment"># lb4 = Label(root,text=&#x27;历史预测对比&#x27;,fg=&#x27;black&#x27;, font=(&#x27;微软雅黑&#x27;,15),  height=2,  relief=FLAT)</span><br><br><span class="hljs-comment"># lb5 = Label(root,text=comb1.get(),fg=&#x27;black&#x27;, font=(&#x27;微软雅黑&#x27;,15),  height=2,  relief=FLAT)</span><br>lb1.place(x=<span class="hljs-number">63</span>,y=<span class="hljs-number">20</span>)<br>lb2.place(x=<span class="hljs-number">300</span>,y=<span class="hljs-number">20</span>)<br>lb3.place(x=<span class="hljs-number">63</span>,y=<span class="hljs-number">110</span>)<br><span class="hljs-comment"># lb4.place(x=510,y=110)</span><br><span class="hljs-comment"># lb5.place(x=820,y=110)</span><br>var1 = StringVar()<br>comb1= Combobox(root,textvariable=var1,values = site)<br>comb1.place(x=<span class="hljs-number">63</span>,y=<span class="hljs-number">80</span>)<br>var2 = StringVar()<br>comb2= Combobox(root,textvariable=var2,values=factor)<br>comb2.place(x=<span class="hljs-number">300</span>,y=<span class="hljs-number">80</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">select_device</span>(<span class="hljs-params">event</span>):<br>    s = comb1.get()<br>    <span class="hljs-built_in">print</span>(s)<br>    <span class="hljs-keyword">return</span> s<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">select_factor</span> (event):<br>    y = comb2.get()<br>    <span class="hljs-built_in">print</span>(y)<br>    <span class="hljs-keyword">return</span> y<br><br>comb1.bind(<span class="hljs-string">&quot;&lt;&lt;ComboboxSelected&gt;&gt;&quot;</span>, select_device)<br>comb2.bind(<span class="hljs-string">&quot;&lt;&lt;ComboboxSelected&gt;&gt;&quot;</span>, select_factor)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">click</span>(<span class="hljs-params">event</span>):<br>    s = comb1.get()<br>    y = comb2.get()<br>    df2 = nseri(s,y )<br>    model = ARIMA(df2, order=(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>))<br>    result_arima = model.fit()<br>    <br>    fig1 = Figure(figsize=(<span class="hljs-number">4</span>, <span class="hljs-number">3</span>), dpi=<span class="hljs-number">120</span>)<br>    axc = fig1.add_subplot(<span class="hljs-number">111</span>)<br>    axc.clear()<br>    pic1(result_arima,df2)<br><br>    fig2 = Figure(figsize=(<span class="hljs-number">4</span>, <span class="hljs-number">3</span>), dpi=<span class="hljs-number">120</span>)<br>    axc2 = fig2.add_subplot(<span class="hljs-number">111</span>)<br>    axc2.clear()<br>    fore_picture(result_arima,df2)<br><br>    fig3 = Figure(figsize=(<span class="hljs-number">4</span>, <span class="hljs-number">3</span>), dpi=<span class="hljs-number">120</span>)<br>    axc3 = fig3.add_subplot(<span class="hljs-number">111</span>)<br>    axc3.clear()<br>    compare2(result_arima,df2)    <br>    <br><br>but1 = Button(root, text=<span class="hljs-string">&#x27;计算&#x27;</span>,font=(<span class="hljs-string">&#x27;微软雅黑&#x27;</span>,<span class="hljs-number">15</span>),  height=<span class="hljs-number">1</span>)<br>but1.place(x=<span class="hljs-number">300</span>,y=<span class="hljs-number">110</span>)  <br><br>but1.bind(<span class="hljs-string">&quot;&lt;Button-1&gt;&quot;</span>,click)<br><br>root.mainloop()<br></code></pre></td></tr></table></figure><p>结果预览<br><img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405092131490.png" alt="111.png"></p><h3 id="模型评价"><a href="#模型评价" class="headerlink" title="模型评价"></a>模型评价</h3><p>模型评价方法： 浓度准确率， 等级准确率</p><p>浓度准确率</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658498060055-471dd8e9-e287-4a75-b360-d508cdf45eea.png"></p><p>等级准确率：实测的类别与预测的类别相同时，则视为预测正确，预测正确的个数占预测的总个数的百分比，即为模型预测准确率。指标预测准确率的详细计算方法如下式：<img src="https://gitee.com/chenwenmao/picbed/raw/master/img/202405092145737.png" alt="image.png"></p><p>Pi为类别相对误差，T 为验证期内实测值的时间点数，t为实测值与预测值对应的时刻，pit为实测的类别与模拟的类别相比值，如果类别相同则为1，否则为0。</p><h3 id="结果提取"><a href="#结果提取" class="headerlink" title="结果提取"></a>结果提取</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">format1</span>(<span class="hljs-params">df2</span>):<br>    df7=pd.Series()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">180</span>) :<br>        df3= df2[:-<span class="hljs-number">4</span>*(<span class="hljs-number">1</span>+i)]        <br>        model = ARIMA(df3, order=(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>))<br>        result_arima1 = model.fit()<br>        df4 = df3.reset_index(drop=<span class="hljs-literal">False</span>)<br>        rows = df4.shape[<span class="hljs-number">0</span>]<br>        endtime = df4.iloc[rows - <span class="hljs-number">1</span>, <span class="hljs-number">0</span>]<br>        forecast = pd.Series(result_arima1.forecast(<span class="hljs-number">5</span>), index=pd.date_range(endtime, periods=<span class="hljs-number">5</span>, freq=<span class="hljs-string">&#x27;H&#x27;</span>))<br>        df8 = forecast.tail(<span class="hljs-number">1</span>)    <br>        df7 = pd.concat((df7,df8),axis=<span class="hljs-number">0</span>,join=<span class="hljs-string">&#x27;inner&#x27;</span>)<br>    <span class="hljs-keyword">return</span> df7 <br>f2 =format1(df2)<br>f2.to_excel(<span class="hljs-string">&quot;forceful.xls&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h3><p>时间原因用的excel 分析</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658498412727-7339ba7d-dbd3-407b-ac06-2261972c967d.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1658498435576-efb265aa-9f0e-452f-84fa-e70509215452.png"></p><p>对比了6月21日~2022&#x2F;7&#x2F;15 高指真实值与预测值的结果，浓度预测准确率为84.61%，等级准确率40.74%，等级准确率偏低的原因为实际监测结果在6附近波动，为Ⅲ类水质标准。<br>预测对比时间窗口存在降雨，实际结果有一定波动，浓度预测准确率能到达84.6%，有一定的推广价值。</p><h3 id="ARIMA-summary-解读"><a href="#ARIMA-summary-解读" class="headerlink" title="ARIMA .summary() 解读"></a>ARIMA .summary() 解读</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/681168/1670242073687-2d564dde-6f19-4ae7-9283-b3341ec7dae9.png"></p><ol><li>左上 为模型基本信息，Dep. Variable（需要预测的变量）、Model（模型及其参数）、Date、Time、Sample（样本数据）、No. Observations（观测数据的数量）</li><li>右上 Log Likelihood（对数似然函数）标识最适合采样数据的分布。虽然它很有用，但AIC和BIC会惩罚模型的复杂性，这有助于使我们的ARIMA模型变得简洁。赤池的信息准则（AIC）有助于确定线性回归模型的强度。AIC 会惩罚添加参数的模型，因为添加更多参数将始终增加最大似然值。贝叶斯信息准则（BIC）与 AIC 一样，BIC 也会惩罚模型的复杂性，但它也包含数据中的行数。Hannan-Quinn信息标准（HQIC），与AIC和BIC一样是模型选择的另一个标准；但是它在实践中并不常用。AIC 、BIC 越小越好</li><li>中部 确保模型中的每个项在统计意义上是否显著。若p值大于0.05，则项不显著。</li><li>下部：Ljung-Box（modified Box-Pierce test）测试错误是白噪音 Ljung-Box (L1) (Q) 为Lag1的LBQ检验统计量，其Prob(Q)为 0.01，p值为0.94。由于p值高于0.05，因此我们不能拒绝零假设（误差是白噪音）</li></ol><h3 id="讨论与总结"><a href="#讨论与总结" class="headerlink" title="讨论与总结"></a>讨论与总结</h3><ol><li>ARIMA 模型在高锰酸盐指数上的预测效果超过80%,经过初步研究，适用于水质在线站点。</li><li>模型可用于单站点单因子预测，不需要其他参数，约束小，预测精度高。</li><li>模型对波动剧烈的因子，预测效果不好，不适用于所有因子，所有站点。</li><li>对于新的数据集需要做平稳性检验，白噪声检验。</li><li>需要采用数据人工识图+自动的方式实现定阶，选择最优的 p，d，q。</li><li>可以继续在 ARIMAX（多元时间序列模型）等方面深入研究。</li></ol><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><a href="/2024/05/13/01%20%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/prophet%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%A8%A1%E5%9E%8B%E6%B0%B4%E8%B4%A8%E9%A2%84%E6%B5%8B%E5%BA%94%E7%94%A8/" title="prophet时间序列模型水质预测应用">prophet时间序列模型水质预测应用</a>]]></content>
    
    
    <categories>
      
      <category>时间序列</category>
      
    </categories>
    
    
    <tags>
      
      <tag>水环境分析</tag>
      
      <tag>python</tag>
      
      <tag>时间序列</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
